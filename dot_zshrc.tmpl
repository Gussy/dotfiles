# Export environment variables
{{- if .isWork }}
export PATH="$HOME/bin:$PATH"
{{- else }}
export PATH="$HOME/bin:$HOME/Development/dottools/bin:$HOME/Development/dottools/.hermit/node/bin:$PATH"
{{- end }}
export GPG_TTY=$(tty)
export HOMEBREW_NO_ANALYTICS=1

# Initialize Zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

# Ensure completions cache directory exists
[ ! -d "${XDG_CACHE_HOME:-${HOME}/.cache}/zinit/completions" ] && mkdir -p "${XDG_CACHE_HOME:-${HOME}/.cache}/zinit/completions"

# Add in zsh plugins
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light Aloxaf/fzf-tab

# Add in snippets
zinit snippet OMZP::git
zinit snippet OMZP::sudo
zinit snippet OMZP::brew
zinit snippet OMZP::gh
zinit snippet OMZP::invoke
zinit snippet OMZP::pip
zinit snippet OMZP::python
zinit snippet OMZP::ssh
zinit snippet OMZP::terraform
zinit snippet OMZP::vscode
zinit snippet OMZP::command-not-found

# Add custom completions directory to fpath
fpath=(~/.config/zsh/completions $fpath)

# Load completions
autoload -Uz compinit && compinit

zinit cdreplay -q

# Initialise oh-my-posh
eval "$(oh-my-posh init zsh --config $HOME/.config/ohmyposh/zen.toml)"

# Key bindings
bindkey -e

# History search arrow keys
bindkey '^[[A' history-search-backward
bindkey '^[[B' history-search-forward

# History
HISTSIZE=10000
HISTFILE=~/.zsh_history
SAVEDHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Aliases
alias ls='ls --color'
alias c='clear'

# Shell integrations
eval "$(fzf --zsh)"
eval "$(test -x $HOME/bin/hermit && $HOME/bin/hermit shell-hooks --print --zsh)"

# Only initialize in interactive shells to avoid issues with Claude Code
[[ $- == *i* ]] && [ -z "$DISABLE_ZOXIDE" ] && eval "$(zoxide init --cmd cd zsh)"

eval "$(/opt/homebrew/bin/brew shellenv)"

{{- if not .isWork }}

# Load nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
{{- end }}

# Bitwarden helper function
bwu() {
    echo "Unlocking Bitwarden vault..."
    export BW_SESSION="$(bw unlock --raw)"
    if [ $? -eq 0 ]; then
        echo "✓ Bitwarden unlocked. BW_SESSION exported."
        echo "  You can now run chezmoi commands."
    else
        echo "✗ Failed to unlock Bitwarden."
        return 1
    fi
}

{{- if .isWork }}
### The lines in this section are added automatically by salt. Do not modify. ###
#Default shell configs
######
{{- end }}
